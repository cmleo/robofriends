{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","hassError","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACzB,OACG,sBAAKC,UAAU,mDAAf,UACG,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACG,6BAAKF,IACL,4BAAIC,WCaDK,EAlBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,OACjB,OACG,8BAEMA,EAAOC,KAAI,SAACC,EAAMC,GACf,OACG,cAAC,EAAD,CAEGR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKXC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC/B,OACG,qBAAKV,UAAU,MAAf,SACG,uBACGA,UAAU,mCACVW,KAAO,SACPC,YAAY,gBACZC,SAAUH,OCGPI,EAVA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACGJ,EAAMK,YCiBEC,G,wDAnBb,WAAYN,GAAO,IAAD,8BAChB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHI,E,qDAOlB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAACC,WAAW,M,oBAG5B,WACE,OAAGF,KAAKJ,MAAMC,SACL,0DAEFG,KAAKX,MAAMK,a,GAhBKS,cCkDZC,E,kDA5CZ,aAAc,IAAD,8BACV,gBAaHC,eAAiB,SAACC,GACf,EAAKL,SAAS,CAAElB,YAAauB,EAAMC,OAAOC,SAb1C,EAAKZ,MAAQ,CACVlB,OAAQ,GACRK,YAAa,IAJN,E,qDAQb,WAAoB,IAAD,OAChB0B,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAEvB,OAAQmC,S,oBAO1C,WACG,MAAgCb,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACV+B,EAAiBpC,EAAOqC,QAAO,SAAAC,GAClC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASnC,EAAYkC,kBAExD,OAAsB,IAAlBvC,EAAOyC,OACD,oBAAI7C,UAAU,SAAd,0BAGJ,sBAAKA,UAAU,KAAf,UACG,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKK,iBAC9B,cAAC,EAAD,UACG,cAAC,EAAD,UACA,cAAC,EAAD,CAAU3B,OAAQoC,e,GAjClBX,aCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAI1BX,M","file":"static/js/main.6e5ccd00.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = ({name, email, id}) => {\r\n   return (\r\n      <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n         <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n         <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\n\r\nexport default Card;\r\n\r\n// At return we need to return JUST ONE ELEMENT like just ONE div who includes more components ","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) =>{\r\n   return(\r\n      <div>\r\n         {\r\n            robots.map((user, i) => {\r\n               return (\r\n                  <Card \r\n                     key={i} \r\n                     id={robots[i].id} \r\n                     name={robots[i].name} \r\n                     email={robots[i].email}\r\n                  />\r\n               );\r\n            })\r\n         }\r\n    </div>\r\n   );\r\n}\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n   return(\r\n      <div className='pa2'>\r\n         <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type = 'search' \r\n            placeholder='search robots'\r\n            onChange={searchChange}\r\n         />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflow: 'scroll', border: '1px solid black', height: '500px'}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n\r\nexport default Scroll;\r\n\r\n// props \r\n// state\r\n// children = ","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info){\r\n    this.setState({hassError: true})\r\n  }\r\n\r\n  render(){\r\n    if(this.state.hasError) {\r\n      return <h1>Oooops. That is not good</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\"\r\nimport Scroll from \"../components/Scroll\"\r\nimport '../containers/App.css'\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends Component {\r\n   constructor(){\r\n      super()\r\n      this.state = {\r\n         robots: [],\r\n         searchfield: ''\r\n      }\r\n   }\r\n\r\n   componentDidMount(){\r\n      fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ robots: users}));\r\n   }\r\n\r\n   onSearchChange = (event) => {\r\n      this.setState({ searchfield: event.target.value })\r\n   }\r\n\r\n   render(){\r\n      const { robots, searchfield } = this.state;\r\n      const filteredRobots = robots.filter(robot =>{\r\n         return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n      })\r\n      if (robots.length === 0){\r\n         return <h1 className=\"tc ma7\">Loading ... </h1>\r\n      } else {\r\n         return(\r\n            <div className='tc'>\r\n               <h1 className='f1'>RoboFriends</h1>\r\n               <SearchBox searchChange={this.onSearchChange}/>\r\n               <Scroll>\r\n                  <ErrorBoundry>\r\n                  <CardList robots={filteredRobots}/>\r\n                  </ErrorBoundry>\r\n               </Scroll>\r\n               \r\n            </div>\r\n         )    \r\n      }\r\n      \r\n   }\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}